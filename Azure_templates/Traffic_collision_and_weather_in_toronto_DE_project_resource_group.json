{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "servers_toronto_dwh_server_name": {
            "defaultValue": "toronto-dwh-server",
            "type": "String"
        },
        "vaults_Toronto_project_DE_keys_name": {
            "defaultValue": "Toronto-project-DE-keys",
            "type": "String"
        },
        "storageAccounts_torontodatalakestorage_name": {
            "defaultValue": "torontodatalakestorage",
            "type": "String"
        },
        "workspaces_Toronto_weather_traffic_collision_data_transform_databricks_name": {
            "defaultValue": "Toronto_weather_traffic_collision_data_transform_databricks",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Databricks/workspaces",
            "apiVersion": "2024-05-01",
            "name": "[parameters('workspaces_Toronto_weather_traffic_collision_data_transform_databricks_name')]",
            "location": "germanywestcentral",
            "sku": {
                "name": "standard"
            },
            "properties": {
                "managedResourceGroupId": "[concat('/subscriptions/c60b049f-5a45-4ea4-8adf-f26b9c17b694/resourceGroups/databricks-rg-', parameters('workspaces_Toronto_weather_traffic_collision_data_transform_databricks_name'), '-3egymwa3aqtou')]",
                "parameters": {
                    "enableNoPublicIp": {
                        "value": false
                    },
                    "prepareEncryption": {
                        "value": false
                    },
                    "publicIpName": {
                        "value": "nat-gw-public-ip"
                    },
                    "requireInfrastructureEncryption": {
                        "value": false
                    },
                    "storageAccountName": {
                        "value": "dbstorageldpswjyqfx6uo"
                    },
                    "storageAccountSkuName": {
                        "value": "Standard_GRS"
                    },
                    "vnetAddressPrefix": {
                        "value": "10.139"
                    }
                },
                "authorizations": [
                    {
                        "principalId": "9a74af6f-d153-4348-988a-e2672920bee9",
                        "roleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                    }
                ],
                "createdBy": {},
                "updatedBy": {}
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2024-04-01-preview",
            "name": "[parameters('vaults_Toronto_project_DE_keys_name')]",
            "location": "polandcentral",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "89e91a7b-b89b-4978-8e8b-0aa8d97d16f9",
                "accessPolicies": [
                    {
                        "tenantId": "89e91a7b-b89b-4978-8e8b-0aa8d97d16f9",
                        "objectId": "654249d5-1306-4739-a717-5deab8e0f4b1",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List"
                            ],
                            "certificates": []
                        }
                    },
                    {
                        "tenantId": "89e91a7b-b89b-4978-8e8b-0aa8d97d16f9",
                        "objectId": "ece73b8d-ee9d-4d5a-afe3-834bd591152b",
                        "permissions": {
                            "certificates": [
                                "Purge",
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ],
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate",
                                "Encrypt",
                                "Decrypt",
                                "UnwrapKey",
                                "WrapKey",
                                "Verify",
                                "Sign",
                                "Purge",
                                "Release"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "Purge"
                            ]
                        }
                    },
                    {
                        "tenantId": "89e91a7b-b89b-4978-8e8b-0aa8d97d16f9",
                        "objectId": "d14eb90f-0095-463a-8b7d-c475c431baa3",
                        "permissions": {
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ],
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "vaultUri": "https://toronto-project-de-keys.vault.azure.net/",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2023-08-01-preview",
            "name": "[parameters('servers_toronto_dwh_server_name')]",
            "location": "polandcentral",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "adminuser",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccounts_torontodatalakestorage_name')]",
            "location": "polandcentral",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_Toronto_project_DE_keys_name'), '/test')]",
            "location": "polandcentral",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_Toronto_project_DE_keys_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true,
                    "exportable": false
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_Toronto_project_DE_keys_name'), '/databricks-token')]",
            "location": "polandcentral",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_Toronto_project_DE_keys_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_Toronto_project_DE_keys_name'), '/torontodatalakestorage-key')]",
            "location": "polandcentral",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_Toronto_project_DE_keys_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_Toronto_project_DE_keys_name'), '/Toronto-DWH-admin-password')]",
            "location": "polandcentral",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_Toronto_project_DE_keys_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_Toronto_project_DE_keys_name'), '/Toronto-DWH-powerbi-analyst-user-password')]",
            "location": "polandcentral",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_Toronto_project_DE_keys_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Default')]",
            "location": "Poland Central",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/default')]",
            "location": "polandcentral",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH')]",
            "location": "polandcentral",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
            },
            "kind": "v12.0,user,vcore,serverless",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 10737418240,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "autoPauseDelay": 45,
                "requestedBackupStorageRedundancy": "Local",
                "minCapacity": 0.5,
                "maintenanceConfigurationId": "/subscriptions/c60b049f-5a45-4ea4-8adf-f26b9c17b694/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false,
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Default')]",
            "location": "Poland Central",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/ClientIp-2024-10-31_18-49-54')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "startIpAddress": "5.173.194.189",
                "endIpAddress": "5.173.194.189"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/ClientIPAddress_2024-11-4_15-11-27')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "startIpAddress": "5.173.194.23",
                "endIpAddress": "5.173.194.23"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/query-editor-26438c')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "startIpAddress": "5.173.194.9",
                "endIpAddress": "5.173.194.9"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/sqlVulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_torontodatalakestorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_torontodatalakestorage_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_torontodatalakestorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_torontodatalakestorage_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_torontodatalakestorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_torontodatalakestorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_torontodatalakestorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_torontodatalakestorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Default')]",
            "location": "Poland Central",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 12
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_toronto_dwh_server_name'), '/Toronto_DWH/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_toronto_dwh_server_name'), 'Toronto_DWH')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_toronto_dwh_server_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_torontodatalakestorage_name'), '/default/toronto-data')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_torontodatalakestorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_torontodatalakestorage_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}